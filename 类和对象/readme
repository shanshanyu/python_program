python 也是面向对象的语言和 java 一样

类的定义：

class  类名(需要继承的类):
    xx

和 java 中的类不一样，java 中的类前面有一个访问控制符。python 没有，python是裸的

继承的类的写法也不一样，python 是一个 (继承的类),java 的是：
class Student extends Person{



}

然后用括号包裹类体。
python 是采用的缩进。


python 中自带一个无参构造方法。如果定义了其他的构造方法，默认的无参构造就会被去掉。这一点和 java 是一样的。
（为什么会带有一个空参构造的原因是因为这些类都是 object 的子类，如果没有重写__init__ 构造方法，那么这些类会从 object 类中继承一个 __init__方法）


python 中只能有一个构造方法，但是 java 中至少有一个构造方法。java 中的构造方法可以重载，只要参数类型不同或者参数个数不同就能实现重载。

python 中只有构造方法，主要是参数可以带默认值，传递值和不传递值就实现了不同的传参，和java中的重写效果也差不多。

python 中子类会继承父类的构造方法，如果子类重写了父类的构造方法，那么必须调用父类的构造方法.

python中的构造方法：
def __init__(self,age,name):
    self.name = name
    self.age = age

java中的构造方法：
public Student(String name,int age){
  this.name = name;
  this.age = age;
}

python 中用 this 代表当前调用的对象。
java 中用 self 代表当前调用的对象。


python 中的访问控制只有两种：私有和公开；java中有四种:private default  protected  public

python中的封装是通过 __（双下划线）来实现的，但是还是可以通过 _类名__xx 来访问被封装的变量或方法
